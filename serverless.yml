service: certification

#frameworkVersion: ">=1.2.0 <2.0.0"

custom:
  stage: "${opt:stage, self:provider.stage}"
  kmsKeyArn: ${file(env.yml):${self:custom.stage}.KEY_ARN}
  CertificatesTopic:
    Fn::Join:
      - ":"
      - - arn
        - aws
        - sns
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - CertificatesToEmail
 # Elaine commented out to remove swag emails
 # SwagTopic:
 #   Fn::Join:
 #     - ":"
 #     - - arn
 #      - aws
 #       - sns
 #       - Ref: AWS::Region
 #       - Ref: AWS::AccountId
 #       - SwagToEmail
  pythonRequirements:
    dockerizePip: non-linux

provider:
  name: aws
  runtime: python3.6
  timeout: 180
  environment: ${file(env.yml):${self:custom.stage}}
  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:PutObject
      Resource: "arn:aws:s3:::training-certificates.neo4j.com/*"
    - Effect: Allow
      Action:
        - KMS:Decrypt
      Resource:
        - ${self:custom.kmsKeyArn}
    - Effect: 'Allow'
      Action:
        - "sns:Publish"
      Resource:
        - ${self:custom.CertificatesTopic}
    - Effect: 'Allow'
      Action:
        - "sns:Publish"
  # Elaine commented out to remove swag emails
      #Resource:
      #  - ${self:custom.SwagTopic}
   # - Effect: Allow
    #  Action:
    #    - ses:SendEmail
    #    - ses:SendRawEmail
      Resource: "arn:aws:ses:us-east-1:128916679330:identity/neo4j.com"

plugins:
  - serverless-python-requirements

functions:
  generate-certificate:
      name: GenerateCertificate
      handler: handler.generate_certificate
      role: 'arn:aws:iam::715633473519:role/lambda_graphacademy'
      events:
        - http: POST generateCertificate
  send-email:
      name: SendEmail
      handler: handler.send_email
      role: 'arn:aws:iam::715633473519:role/lambda_graphacademy'
      events:
        - sns:
            topicName: CertificatesToEmail
            displayName: Topic to email certificates
  get-email:
      name: Auth0GetEmailFromUid
      handler: handler.get_email_lambda
      role: 'arn:aws:iam::715633473519:role/lambda_graphacademy'
      events:
        - http: POST Auth0GetEmailFromUid
# Elaine commented out to eliminate swag emails
 # find-people-needing-swag:
 #     name: FindPeopleNeedingSwag
 #     handler: handler.find_people_needing_swag
 #     role: 'arn:aws:iam::715633473519:role/lambda_graphacademy'
 #     events:
 #      - schedule: rate(2 minutes)

 # send-swag-email:
 #     name: SendSwagEmail
 #     handler: handler.send_swag_email
 #     role: 'arn:aws:iam::715633473519:role/lambda_graphacademy'
 #     events:
 #       - sns:
 #           topicName: SwagToEmail
 #           displayName: Topic to email swag

package:
  exclude:
    - node_modules/**
    - a/**
    - .git/**

